 # -*- coding: utf-8 -*-

"""
Django settings for GlobalSettings project.

Generated by 'django-admin startproject' using Django 1.10.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

import os, sys


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3l7ejeym57vv&2!2k@=36ex0py6c78_uwire=i+#oui2y-lmr7'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

SESSION_COOKIE_HTTPONLY = True


#SECURE_SSL_REDIRECT = True
#SESSION_COOKIE_SECURE = True
#CSRF_COOKIE_SECURE = True
#CSRF_COOKIE_HTTPONLY = True



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'main.apps.MainConfig',                         # 入口
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # 'django.contrib.sessions.middleware.SessionMiddleware',  # 使用UriSessionMiddleware代替这个默认的
    'common.middleware.UriSessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 'common.middleware.TracbackMiddleware',  # 在Debug=False时，输出脚本错误日志

]

ROOT_URLCONF = 'GlobalSettings.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 模版文件的存放路径，可以有多个
        'DIRS': [
            BASE_DIR + "/templates",
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'GlobalSettings.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default' : {
        #'ENGINE'   : 'django.db.backends.mysql',
        'ENGINE'   : 'mysql.connector.django',
        'NAME'     : 'tinkerpatch',
        'USER'     : 'root',
        'PASSWORD' : '123456',
        'HOST'     : 'localhost',
        'PORT'     : '3306',
        'OPTIONS'  : {
            'autocommit': True,
        }
    },
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

#LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

#USE_TZ = True
USE_TZ = False

DATETIME_FORMAT = '%Y-%m-%d %H:%M:%S'

SITE_ID = 1

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

# 初始化数据文件夹
FIXTURE_DIRS = (os.path.join(BASE_DIR,'initdata',),)

# 静态文件的存放路径，可以有多个
STATICFILES_DIRS  = (
    os.path.join(BASE_DIR, "static"),
)

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/var/www/example.com/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# If you want to use {{ MEDIA_URL }} in your templates,
# add 'django.template.context_processors.media' in the 'context_processors' option of TEMPLATES.
# Example: "http://media.example.com/"
MEDIA_URL = "/media/"


# The maximum size (in bytes) that an upload will be before it gets streamed to the file system.
# See Managing files for details.
FILE_UPLOAD_MAX_MEMORY_SIZE = 2621440  # 2.5M * 1024 * 1024

# The directory to store data to (typically files larger than FILE_UPLOAD_MAX_MEMORY_SIZE) temporarily while uploading files.
# If None, Django will use the standard temporary directory for the operating system. For example,
# this will default to /tmp on *nix-style operating systems.
FILE_UPLOAD_TEMP_DIR = None

if sys.platform == "win32":
    toLocalFile = {
            'level' : 'DEBUG',
            'class' : 'logging.FileHandler',
            'filename' : os.path.join(BASE_DIR, 'logs/ubox_msg.log'),
            'encoding' : 'utf-8',
            'formatter' : 'verbose',
    }
else:
    toLocalFile = {
            'level' : 'DEBUG',
            'class' : 'logging.handlers.TimedRotatingFileHandler',
            'filename' : os.path.join(BASE_DIR, 'logs/ubox_msg.log'),
            'when' : 'D',
            'interval' : 1,
            'encoding' : 'utf-8',
            'formatter' : 'verbose',
    }

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'null': {
            'level': 'DEBUG',
            'class': 'logging.NullHandler',
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'toLocalFile' : toLocalFile,
    },
    'loggers': {
        'default': {
            #'handlers': ['console'],
            'handlers': ['toLocalFile'],
            'level': 'DEBUG',
            'propagate' : True,
        },
    }
}

# logging config for django custom command
COMMAND_LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
    },
    'handlers': {
        'toCommandLogFile' : {
            'level' : 'DEBUG',
            'class' : 'logging.handlers.TimedRotatingFileHandler',
            'filename' : os.path.join(BASE_DIR, 'logs/command.log'),
            'when' : 'D',
            'interval' : 1,
            'encoding' : 'utf-8',
            'formatter' : 'verbose',
        },
    },
    'loggers': {
        'command': {
            'handlers': ['toCommandLogFile'],
            'level': 'DEBUG',
            'propagate' : True,
        },
    }
}


# 补丁文件路径
SERVER_PATCH_PATH = "/media/"
LOCALS_PATCH_PATH = BASE_DIR + SERVER_PATCH_PATH




# 用于生成签名的key
UBOX_SECRET = "EpHABT9d3bzeTxUWvGaVKdK11HxFB0lP"

# 是否走内部测试接口（例如支付时将不会走真正的支付接口，仅仅是内部模拟）
# 在部署上线时，此参数必须设置为False
INTERNAL_TEST = True

# uid的默认前缀
UID_PREFIX = ""

# 430000 - 湖南省
# AREA_ID = 430000 * 1000 + Define.PPID.LT

# 默认的硬件平台，每个要上线的地方的硬件平台都不一样
# POH_TYPE = Define.POH_TYPE.OTT

# 应用的业务范围，用于数据整合时区分业务
# see also: Define.BP_TYPE
# BUSINESS_ID = Define.BP_TYPE.EDU


# 访问者时间（单位：秒）
# 访问者切换页面的时间不超过这个时间，就认为前后两个页面的访问是同一阶段的访问
PAGEVIEW_VISITOR_TIME = 60 * 30



# ----------------------------------------
# for photologue
# ----------------------------------------
# 本地图片文件地址
# LOCAL_PICTURE = "/media/photologue/photos"

