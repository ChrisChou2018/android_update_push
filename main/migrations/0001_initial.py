# -*- coding: utf-8 -*-
# Generated by Django 1.11.8 on 2018-01-30 15:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AppPack',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('appname', models.CharField(db_column='c_appname', help_text='app的名称', max_length=64, unique=True, verbose_name='app名称')),
                ('packname', models.CharField(db_column='c_packname', help_text='包名', max_length=64, unique=True, verbose_name='包名')),
            ],
            options={
                'verbose_name': 'AppPack：App包',
                'verbose_name_plural': 'AppPack：App包',
            },
        ),
        migrations.CreateModel(
            name='Histroy',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('size', models.IntegerField(db_column='c_size', default=0, help_text='当前补丁大小', verbose_name='当前补丁大小')),
                ('patch_version', models.CharField(db_column='c_patch_version', default='', help_text='补丁版本，默认为1', max_length=255, verbose_name='补丁版本')),
                ('patch_name', models.CharField(blank=True, db_column='c_patch_name', help_text='补丁包的名字，未哈希值', max_length=255, null=True, verbose_name='补丁包名字')),
                ('patch_path', models.CharField(blank=True, db_column='c_patch_path', help_text='补丁包的路径', max_length=255, null=True, verbose_name='补丁路径')),
                ('description', models.TextField(blank=True, db_column='c_description', default='', null=True, verbose_name='补丁描述')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='c_create_time', verbose_name='创建时间')),
                ('modified_time', models.DateTimeField(auto_now=True, db_column='c_modified_time', verbose_name='修改时间')),
            ],
            options={
                'verbose_name': 'Histroy：历史补丁',
                'verbose_name_plural': 'Histroy：历史补丁',
            },
        ),
        migrations.CreateModel(
            name='Online_parameters',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('pname', models.CharField(db_column='c_pname', help_text='参数名称', max_length=255, verbose_name='参数名称')),
                ('pvalues', models.CharField(db_column='c_pvalues', help_text='参数值', max_length=255, verbose_name='参数值')),
            ],
            options={
                'verbose_name': 'Online_parameters：在线参数表',
                'verbose_name_plural': 'Online_parameters：在线参数表',
            },
        ),
        migrations.CreateModel(
            name='Patch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('app_version', models.CharField(db_column='c_app_version', default='', help_text='APP的版本', max_length=64, verbose_name='APP的版本')),
                ('app_channel', models.CharField(db_column='c_app_channel', default='', help_text='APP的渠道号', max_length=64, verbose_name='APP的渠道号')),
                ('patch_name', models.CharField(blank=True, db_column='c_patch_name', help_text='补丁包的名字为补丁文件哈希值', max_length=255, null=True, verbose_name='补丁包名字')),
                ('size', models.IntegerField(db_column='c_size', default=0, help_text='补丁大小', verbose_name='补丁大小')),
                ('patch_path', models.CharField(blank=True, db_column='补丁文件的路径', help_text='补丁包的路径', max_length=255, null=True, verbose_name='补丁的路径')),
                ('issued', models.IntegerField(db_column='c_issued', default=0, help_text='已下发补丁', verbose_name='已下发补丁')),
                ('patch_version', models.CharField(blank=True, db_column='c_patch_version', help_text='当前补丁版本，默认为0,不在历史补丁页面上显示', max_length=255, null=True, verbose_name='当前补丁版本')),
                ('description', models.TextField(blank=True, db_column='c_description', default='', null=True, verbose_name='补丁描述')),
                ('enable', models.BooleanField(db_column='c_enable', default=True, help_text='补丁下发状态，默认已下发，否则显示未下发', verbose_name='当前补丁下发状态')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='c_create_time', verbose_name='创建时间')),
                ('modified_time', models.DateTimeField(auto_now=True, db_column='c_modified_time', verbose_name='修改时间')),
                ('apppack', models.ForeignKey(db_column='c_apppack_id', default='', help_text='所属的App', on_delete=django.db.models.deletion.CASCADE, to='main.AppPack', verbose_name='所属的App')),
            ],
            options={
                'verbose_name': 'Patch：补丁下发表详情',
                'verbose_name_plural': 'Patch：补丁下发表详情',
            },
        ),
        migrations.CreateModel(
            name='PatchMonitoring',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_version', models.CharField(db_column='c_app_version', default='', help_text='APP的版本', max_length=64, verbose_name='APP的版本')),
                ('app_packname', models.CharField(blank=True, db_column='c_app_pack_name', max_length=255, null=True, verbose_name='所属APP')),
                ('patch_version', models.CharField(blank=True, db_column='c_patch_version', help_text='当前补丁版本，默认为0,不在历史补丁页面上显示', max_length=255, null=True, verbose_name='当前补丁版本')),
                ('success_count', models.IntegerField(db_column='c_success_count', default=0, verbose_name='补丁成功数')),
                ('fail_count', models.IntegerField(db_column='fail_count', default=0, verbose_name='补丁失败数')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='c_create_time', verbose_name='创建时间')),
                ('modified_time', models.DateTimeField(auto_now=True, db_column='c_modified_time', verbose_name='修改时间')),
            ],
        ),
        migrations.CreateModel(
            name='PV_LOG',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(db_column='c_user_id', max_length=255, null=True, verbose_name='用户ID')),
                ('patch_id', models.CharField(db_column='c_patchid', max_length=255, null=True, verbose_name='补丁版本ID')),
                ('event_id', models.IntegerField(choices=[(0, 'KEY_REQUEST'), (1, 'KEY_DOWNLOAD'), (2, 'KEY_TRY_APPLY'), (3, 'KEY_TRY_APPLY_SUCCESS'), (4, 'KEY_APPLIED_START'), (5, 'KEY_APPLIED'), (6, 'KEY_LOADED'), (7, 'KEY_CRASH_FAST_PROTECT'), (8, 'KEY_CRASH_CAUSE_XPOSED_DALVIK'), (9, 'KEY_CRASH_CAUSE_XPOSED_ART'), (10, 'KEY_APPLY_WITH_RETRY'), (70, 'KEY_TRY_APPLY_UPGRADE'), (71, 'KEY_TRY_APPLY_DISABLE'), (72, 'KEY_TRY_APPLY_RUNNING'), (73, 'KEY_TRY_APPLY_INSERVICE'), (74, 'KEY_TRY_APPLY_NOT_EXIST'), (75, 'KEY_TRY_APPLY_GOOGLEPLAY'), (76, 'KEY_TRY_APPLY_ROM_SPACE'), (77, 'KEY_TRY_APPLY_ALREADY_APPLY '), (78, 'KEY_TRY_APPLY_MEMORY_LIMIT'), (79, 'KEY_TRY_APPLY_CRASH_LIMIT'), (80, 'KEY_TRY_APPLY_CONDITION_NOT_SATISFIED'), (81, 'KEY_TRY_APPLY_JIT'), (100, 'KEY_APPLIED_UPGRADE'), (101, 'KEY_APPLIED_UPGRADE_FAIL'), (120, 'KEY_APPLIED_EXCEPTION'), (121, 'KEY_APPLIED_DEXOPT_OTHER'), (122, 'KEY_APPLIED_DEXOPT_EXIST'), (123, 'KEY_APPLIED_DEXOPT_FORMAT'), (124, 'KEY_APPLIED_INFO_CORRUPTED'), (150, 'KEY_APPLIED_PACKAGE_CHECK_SIGNATURE'), (151, 'KEY_APPLIED_PACKAGE_CHECK_DEX_META'), (152, 'KEY_APPLIED_PACKAGE_CHECK_LIB_META'), (153, 'KEY_APPLIED_PACKAGE_CHECK_APK_TINKER_ID_NOT_FOUND'), (154, 'KEY_APPLIED_PACKAGE_CHECK_PATCH_TINKER_ID_NOT_FOUND'), (155, 'KEY_APPLIED_PACKAGE_CHECK_META_NOT_FOUND'), (156, 'KEY_APPLIED_PACKAGE_CHECK_TINKER_ID_NOT_EQUAL'), (157, 'KEY_APPLIED_PACKAGE_CHECK_RES_META'), (158, 'KEY_APPLIED_PACKAGE_CHECK_TINKERFLAG_NOT_SUPPORT'), (180, 'KEY_APPLIED_VERSION_CHECK'), (181, 'KEY_APPLIED_PATCH_FILE_EXTRACT'), (182, 'KEY_APPLIED_DEX_EXTRACT'), (183, 'KEY_APPLIED_LIB_EXTRACT'), (184, 'KEY_APPLIED_RESOURCE_EXTRACT'), (200, 'KEY_APPLIED_SUCC_COST_5S_LESS'), (201, 'KEY_APPLIED_SUCC_COST_10S_LESS'), (202, 'KEY_APPLIED_SUCC_COST_30S_LESS'), (203, 'KEY_APPLIED_SUCC_COST_60S_LESS'), (204, 'KEY_APPLIED_SUCC_COST_OTHER'), (205, 'KEY_APPLIED_FAIL_COST_5S_LESS'), (206, 'KEY_APPLIED_FAIL_COST_10S_LESS'), (207, 'KEY_APPLIED_FAIL_COST_30S_LESS'), (208, 'KEY_APPLIED_FAIL_COST_60S_LESS'), (209, 'KEY_APPLIED_FAIL_COST_OTHER'), (250, 'KEY_LOADED_UNKNOWN_EXCEPTION'), (251, 'KEY_LOADED_UNCAUGHT_EXCEPTION'), (252, 'KEY_LOADED_EXCEPTION_DEX'), (253, 'KEY_LOADED_EXCEPTION_DEX_CHECK'), (254, 'KEY_LOADED_EXCEPTION_RESOURCE'), (255, 'KEY_LOADED_EXCEPTION_RESOURCE_CHECK'), (300, 'KEY_LOADED_MISMATCH_DEX'), (301, 'KEY_LOADED_MISMATCH_LIB'), (302, 'KEY_LOADED_MISMATCH_RESOURCE'), (303, 'KEY_LOADED_MISSING_DEX'), (304, 'KEY_LOADED_MISSING_LIB'), (305, 'KEY_LOADED_MISSING_PATCH_FILE'), (306, 'KEY_LOADED_MISSING_PATCH_INFO'), (307, 'KEY_LOADED_MISSING_DEX_OPT'), (308, 'KEY_LOADED_MISSING_RES'), (309, 'KEY_LOADED_INFO_CORRUPTED'), (350, 'KEY_LOADED_PACKAGE_CHECK_SIGNATURE'), (351, 'KEY_LOADED_PACKAGE_CHECK_DEX_META'), (352, 'KEY_LOADED_PACKAGE_CHECK_LIB_META'), (353, 'KEY_LOADED_PACKAGE_CHECK_APK_TINKER_ID_NOT_FOUND'), (354, 'KEY_LOADED_PACKAGE_CHECK_PATCH_TINKER_ID_NOT_FOUND'), (355, 'KEY_LOADED_PACKAGE_CHECK_TINKER_ID_NOT_EQUAL'), (356, 'KEY_LOADED_PACKAGE_CHECK_PACKAGE_META_NOT_FOUND'), (357, 'KEY_LOADED_PACKAGE_CHECK_RES_META'), (358, 'KEY_LOADED_PACKAGE_CHECK_TINKERFLAG_NOT_SUPPORT'), (400, 'KEY_LOADED_SUCC_COST_500_LESS'), (401, 'KEY_LOADED_SUCC_COST_1000_LESS '), (402, 'KEY_LOADED_SUCC_COST_3000_LESS'), (403, 'KEY_LOADED_SUCC_COST_5000_LESS'), (404, 'KEY_LOADED_SUCC_COST_OTHER'), (450, 'KEY_LOADED_INTERPRET_GET_INSTRUCTION_SET_ERROR'), (451, 'KEY_LOADED_INTERPRET_INTERPRET_COMMAND_ERROR'), (452, 'KEY_LOADED_INTERPRET_TYPE_INTERPRET_OK')], db_column='c_event_id', null=True, verbose_name='事件ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, db_column='c_create_time', verbose_name='创建时间')),
                ('modified_time', models.DateTimeField(auto_now=True, db_column='c_modified_time', verbose_name='修改时间')),
            ],
        ),
        migrations.AddField(
            model_name='histroy',
            name='patch',
            field=models.ForeignKey(blank=True, db_column='c_patch_id', help_text='所属app版本', null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Patch', verbose_name='所属app版本'),
        ),
        migrations.AlterUniqueTogether(
            name='patch',
            unique_together=set([('app_version', 'apppack')]),
        ),
    ]
